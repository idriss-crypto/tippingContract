/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockERC1155, MockERC1155Interface } from "../MockERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051806080016040528060488152602001620018d760489139620000378162000049565b5062000043336200005b565b6200021e565b600262000057828262000152565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000d857607f821691505b602082108103620000f957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014d57600081815260208120601f850160051c81016020861015620001285750805b601f850160051c820191505b81811015620001495782815560010162000134565b5050505b505050565b81516001600160401b038111156200016e576200016e620000ad565b62000186816200017f8454620000c3565b84620000ff565b602080601f831160018114620001be5760008415620001a55750858301515b600019600386901b1c1916600185901b17855562000149565b600085815260208120601f198616915b82811015620001ef57888601518255948401946001909101908401620001ce565b50858210156200020e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6116a9806200022e6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c8063715018a611610071578063715018a6146101695780638da5cb5b14610171578063a22cb4651461018c578063e985e9c51461019f578063f242432a146101db578063f2fde38b146101ee57600080fd5b8062fdd58e146100b857806301ffc9a7146100de5780630e89341c14610101578063156e29f6146101215780632eb2c2d6146101365780634e1273f414610149575b600080fd5b6100cb6100c6366004610e21565b610201565b6040519081526020015b60405180910390f35b6100f16100ec366004610e61565b61029a565b60405190151581526020016100d5565b61011461010f366004610e85565b6102ea565b6040516100d59190610ee4565b61013461012f366004610ef7565b61037e565b005b610134610144366004611076565b6103a6565b61015c610157366004611120565b6103f2565b6040516100d59190611226565b61013461051c565b6003546040516001600160a01b0390911681526020016100d5565b61013461019a366004611239565b610530565b6100f16101ad366004611275565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101346101e93660046112a8565b61053f565b6101346101fc36600461130d565b610584565b60006001600160a01b0383166102715760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806102cb57506001600160e01b031982166303a24d0760e21b145b8061029457506301ffc9a760e01b6001600160e01b0319831614610294565b6060600280546102f990611328565b80601f016020809104026020016040519081016040528092919081815260200182805461032590611328565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b50505050509050919050565b6103866105fd565b6103a183838360405180602001604052806000815250610657565b505050565b6001600160a01b0385163314806103c257506103c285336101ad565b6103de5760405162461bcd60e51b815260040161026890611362565b6103eb858585858561076b565b5050505050565b606081518351146104575760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610268565b6000835167ffffffffffffffff81111561047357610473610f2a565b60405190808252806020026020018201604052801561049c578160200160208202803683370190505b50905060005b8451811015610514576104e78582815181106104c0576104c06113b0565b60200260200101518583815181106104da576104da6113b0565b6020026020010151610201565b8282815181106104f9576104f96113b0565b602090810291909101015261050d816113dc565b90506104a2565b509392505050565b6105246105fd565b61052e6000610948565b565b61053b33838361099a565b5050565b6001600160a01b03851633148061055b575061055b85336101ad565b6105775760405162461bcd60e51b815260040161026890611362565b6103eb8585858585610a7a565b61058c6105fd565b6001600160a01b0381166105f15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610268565b6105fa81610948565b50565b6003546001600160a01b0316331461052e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610268565b6001600160a01b0384166106b75760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610268565b3360006106c385610ba4565b905060006106d085610ba4565b90506000868152602081815260408083206001600160a01b038b168452909152812080548792906107029084906113f5565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461076283600089898989610bef565b50505050505050565b81518351146107cd5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610268565b6001600160a01b0384166107f35760405162461bcd60e51b815260040161026890611408565b3360005b84518110156108da576000858281518110610814576108146113b0565b602002602001015190506000858381518110610832576108326113b0565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156108825760405162461bcd60e51b81526004016102689061144d565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906108bf9084906113f5565b92505081905550505050806108d3906113dc565b90506107f7565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161092a929190611497565b60405180910390a4610940818787878787610d4a565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610a0d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610268565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610aa05760405162461bcd60e51b815260040161026890611408565b336000610aac85610ba4565b90506000610ab985610ba4565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610afc5760405162461bcd60e51b81526004016102689061144d565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610b399084906113f5565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610b99848a8a8a8a8a610bef565b505050505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610bde57610bde6113b0565b602090810291909101015292915050565b6001600160a01b0384163b156109405760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610c3390899089908890889088906004016114c5565b6020604051808303816000875af1925050508015610c6e575060408051601f3d908101601f19168201909252610c6b9181019061150a565b60015b610d1a57610c7a611527565b806308c379a003610cb35750610c8e611543565b80610c995750610cb5565b8060405162461bcd60e51b81526004016102689190610ee4565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610268565b6001600160e01b0319811663f23a6e6160e01b146107625760405162461bcd60e51b8152600401610268906115cd565b6001600160a01b0384163b156109405760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610d8e9089908990889088908890600401611615565b6020604051808303816000875af1925050508015610dc9575060408051601f3d908101601f19168201909252610dc69181019061150a565b60015b610dd557610c7a611527565b6001600160e01b0319811663bc197c8160e01b146107625760405162461bcd60e51b8152600401610268906115cd565b80356001600160a01b0381168114610e1c57600080fd5b919050565b60008060408385031215610e3457600080fd5b610e3d83610e05565b946020939093013593505050565b6001600160e01b0319811681146105fa57600080fd5b600060208284031215610e7357600080fd5b8135610e7e81610e4b565b9392505050565b600060208284031215610e9757600080fd5b5035919050565b6000815180845260005b81811015610ec457602081850181015186830182015201610ea8565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610e7e6020830184610e9e565b600080600060608486031215610f0c57600080fd5b610f1584610e05565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610f6657610f66610f2a565b6040525050565b600067ffffffffffffffff821115610f8757610f87610f2a565b5060051b60200190565b600082601f830112610fa257600080fd5b81356020610faf82610f6d565b604051610fbc8282610f40565b83815260059390931b8501820192828101915086841115610fdc57600080fd5b8286015b84811015610ff75780358352918301918301610fe0565b509695505050505050565b600082601f83011261101357600080fd5b813567ffffffffffffffff81111561102d5761102d610f2a565b604051611044601f8301601f191660200182610f40565b81815284602083860101111561105957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561108e57600080fd5b61109786610e05565b94506110a560208701610e05565b9350604086013567ffffffffffffffff808211156110c257600080fd5b6110ce89838a01610f91565b945060608801359150808211156110e457600080fd5b6110f089838a01610f91565b9350608088013591508082111561110657600080fd5b5061111388828901611002565b9150509295509295909350565b6000806040838503121561113357600080fd5b823567ffffffffffffffff8082111561114b57600080fd5b818501915085601f83011261115f57600080fd5b8135602061116c82610f6d565b6040516111798282610f40565b83815260059390931b850182019282810191508984111561119957600080fd5b948201945b838610156111be576111af86610e05565b8252948201949082019061119e565b965050860135925050808211156111d457600080fd5b506111e185828601610f91565b9150509250929050565b600081518084526020808501945080840160005b8381101561121b578151875295820195908201906001016111ff565b509495945050505050565b602081526000610e7e60208301846111eb565b6000806040838503121561124c57600080fd5b61125583610e05565b91506020830135801515811461126a57600080fd5b809150509250929050565b6000806040838503121561128857600080fd5b61129183610e05565b915061129f60208401610e05565b90509250929050565b600080600080600060a086880312156112c057600080fd5b6112c986610e05565b94506112d760208701610e05565b93506040860135925060608601359150608086013567ffffffffffffffff81111561130157600080fd5b61111388828901611002565b60006020828403121561131f57600080fd5b610e7e82610e05565b600181811c9082168061133c57607f821691505b60208210810361135c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113ee576113ee6113c6565b5060010190565b80820180821115610294576102946113c6565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006114aa60408301856111eb565b82810360208401526114bc81856111eb565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906114ff90830184610e9e565b979650505050505050565b60006020828403121561151c57600080fd5b8151610e7e81610e4b565b600060033d11156115405760046000803e5060005160e01c5b90565b600060443d10156115515790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561158157505050505090565b82850191508151818111156115995750505050505090565b843d87010160208285010111156115b35750505050505090565b6115c260208286010187610f40565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611641908301866111eb565b828103606084015261165381866111eb565b905082810360808401526116678185610e9e565b9897505050505050505056fea26469706673582212204ed937af97f07208a1a5de0deceb5f424b415452eb74ebdcbb55063b97e61f4b64736f6c6343000813003368747470733a2f2f697066732e696f2f697066732f516d536b6e464a7a315a3136784b47424a50463431445073437a797a4359714244385a6d566d6e79614e315677342f7b69647d";

export class MockERC1155__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockERC1155> {
    return super.deploy(overrides || {}) as Promise<MockERC1155>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockERC1155 {
    return super.attach(address) as MockERC1155;
  }
  connect(signer: Signer): MockERC1155__factory {
    return super.connect(signer) as MockERC1155__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155Interface {
    return new utils.Interface(_abi) as MockERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MockERC1155;
  }
}
