/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  FeeCalculator,
  FeeCalculatorInterface,
} from "../../../../../src/contracts/libs/old/FeeCalculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nativeUsdAggregator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MINIMAL_PAYMENT_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIMAL_PAYMENT_FEE_DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_FEE_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_FEE_PERCENTAGE_DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_FEE_SLIPPAGE_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalPaymentFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_paymentFeeDenominator",
        type: "uint256",
      },
    ],
    name: "changeMinimalPaymentFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_paymentFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_paymentFeeDenominator",
        type: "uint256",
      },
    ],
    name: "changePaymentFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "enum AssetType",
        name: "_assetType",
        type: "uint8",
      },
    ],
    name: "getPaymentFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052600a6001556103e86002556001600355600160045534801561002557600080fd5b50604051610a6a380380610a6a83398101604081905261004491610108565b61004d336100b8565b6001600160a01b0381166100a75760405162461bcd60e51b815260206004820152601360248201527f416464726573732063616e6e6f74206265203000000000000000000000000000604482015260640160405180910390fd5b6001600160a01b0316608052610138565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561011a57600080fd5b81516001600160a01b038116811461013157600080fd5b9392505050565b60805161091061015a6000396000818161044d015261052701526109106000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146100fa57806380fa375f1461010257806383a4c7e1146101155780638da5cb5b1461011d5780639cd6aa4c14610138578063f2fde38b1461014b57600080fd5b806303f613dc146100ae5780630728c7d2146100ca5780630f7f630a146100df57806327cb0ba1146100e85780635c73f163146100f1575b600080fd5b6100b760025481565b6040519081526020015b60405180910390f35b6100dd6100d83660046105d8565b61015e565b005b6100b760035481565b6100b760045481565b6100b760015481565b6100dd6101ba565b6100dd6101103660046105d8565b6101ce565b6100b7600581565b6000546040516001600160a01b0390911681526020016100c1565b6100b76101463660046105fa565b610221565b6100dd61015936600461062e565b6102df565b610166610358565b6000821161018f5760405162461bcd60e51b81526004016101869061065e565b60405180910390fd5b600081116101af5760405162461bcd60e51b8152600401610186906106a1565b600191909155600255565b6101c2610358565b6101cc60006103b2565b565b6101d6610358565b600082116101f65760405162461bcd60e51b81526004016101869061065e565b600081116102165760405162461bcd60e51b8152600401610186906106a1565b600391909155600455565b60008061022c610402565b905060006102398561042b565b9050600060056000866004811115610253576102536106f0565b6004811115610264576102646106f0565b815260208101919091526040016000205460ff169050600281600281111561028e5761028e6106f0565b0361029e578293505050506102d9565b60008160028111156102b2576102b26106f0565b036102c1575091506102d99050565b828211156102d3575091506102d99050565b50909150505b92915050565b6102e7610358565b6001600160a01b03811661034c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610186565b610355816103b2565b50565b6000546001600160a01b031633146101cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610186565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000600454600354610412610448565b61041c919061071c565b6104269190610733565b905090565b60006002546001548361043e919061071c565b6102d99190610733565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610774565b505050915050600081136105235760405162461bcd60e51b815260206004820181905260248201527f556e61626c6520746f207265747269657665204e41544956452070726963652e6044820152606401610186565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a791906107c4565b6105b290600a6108cb565b9050816105c782670de0b6b3a764000061071c565b6105d19190610733565b9250505090565b600080604083850312156105eb57600080fd5b50508035926020909101359150565b6000806040838503121561060d57600080fd5b8235915060208301356005811061062357600080fd5b809150509250929050565b60006020828403121561064057600080fd5b81356001600160a01b038116811461065757600080fd5b9392505050565b60208082526023908201527f5061796d656e74206665652068617320746f206265206269676765722074686160408201526206e20360ec1b606082015260800190565b6020808252602f908201527f5061796d656e74206665652064656e6f6d696e61746f722068617320746f206260408201526e06520626967676572207468616e203608c1b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176102d9576102d9610706565b60008261075057634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff8116811461076f57600080fd5b919050565b600080600080600060a0868803121561078c57600080fd5b61079586610755565b94506020860151935060408601519250606086015191506107b860808701610755565b90509295509295909350565b6000602082840312156107d657600080fd5b815160ff8116811461065757600080fd5b600181815b8085111561082257816000190482111561080857610808610706565b8085161561081557918102915b93841c93908002906107ec565b509250929050565b600082610839575060016102d9565b81610846575060006102d9565b816001811461085c576002811461086657610882565b60019150506102d9565b60ff84111561087757610877610706565b50506001821b6102d9565b5060208310610133831016604e8410600b84101617156108a5575081810a6102d9565b6108af83836107e7565b80600019048211156108c3576108c3610706565b029392505050565b600061065760ff84168361082a56fea2646970667358221220045891486e4d17aa8c3f00a9cab07472eeff31cba0af8746657e9e099c497d1464736f6c63430008130033";

type FeeCalculatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeCalculatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeCalculator__factory extends ContractFactory {
  constructor(...args: FeeCalculatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _nativeUsdAggregator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeCalculator> {
    return super.deploy(
      _nativeUsdAggregator,
      overrides || {}
    ) as Promise<FeeCalculator>;
  }
  override getDeployTransaction(
    _nativeUsdAggregator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_nativeUsdAggregator, overrides || {});
  }
  override attach(address: string): FeeCalculator {
    return super.attach(address) as FeeCalculator;
  }
  override connect(signer: Signer): FeeCalculator__factory {
    return super.connect(signer) as FeeCalculator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeCalculatorInterface {
    return new utils.Interface(_abi) as FeeCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeCalculator {
    return new Contract(address, _abi, signerOrProvider) as FeeCalculator;
  }
}
