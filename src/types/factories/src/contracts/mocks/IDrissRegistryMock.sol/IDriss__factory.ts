/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  IDriss,
  IDrissInterface,
} from "../../../../../src/contracts/mocks/IDrissRegistryMock.sol/IDriss";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "IDrissMap",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
    ],
    name: "IDrissOwners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "IDrissOwnersMap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
      {
        internalType: "string",
        name: "_address",
        type: "string",
      },
    ],
    name: "addIDriss",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
    ],
    name: "getIDriss",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
    ],
    name: "removeIDriss",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600060405161002890606160f81b815260010190565b9081526040805191829003602001822080546001600160a01b03949094166001600160a01b0319948516179055603160f91b8252600060018301819052905191829003602101909120805490921690915561068f90819061008990396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630ac6ad1c1461006757806317f1cef0146100905780633db4bbba146100a55780635335104b146100b8578063679f0015146100cb578063c3da33b6146100f6575b600080fd5b61007a6100753660046103fd565b61012a565b604051610087919061045e565b60405180910390f35b6100a361009e366004610491565b6101cf565b005b6100a36100b33660046103fd565b6101ff565b61007a6100c63660046103fd565b61022c565b6100de6100d93660046103fd565b6102dc565b6040516001600160a01b039091168152602001610087565b6100de6101043660046103fd565b80516020818301810180516000825292820191909301209152546001600160a01b031681565b80516020818301810180516001825292820191909301209152805461014e906104f5565b80601f016020809104026020016040519081016040528092919081815260200182805461017a906104f5565b80156101c75780601f1061019c576101008083540402835291602001916101c7565b820191906000526020600020905b8154815290600101906020018083116101aa57829003601f168201915b505050505081565b806001836040516101e0919061052f565b908152602001604051809103902090816101fa9190610599565b505050565b60018160405161020f919061052f565b90815260200160405180910390206000610229919061030c565b50565b606060018260405161023e919061052f565b90815260200160405180910390208054610257906104f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610283906104f5565b80156102d05780601f106102a5576101008083540402835291602001916102d0565b820191906000526020600020905b8154815290600101906020018083116102b357829003601f168201915b50505050509050919050565b600080826040516102ed919061052f565b908152604051908190036020019020546001600160a01b031692915050565b508054610318906104f5565b6000825580601f10610328575050565b601f01602090049060005260206000209081019061022991905b808211156103565760008155600101610342565b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261038157600080fd5b813567ffffffffffffffff8082111561039c5761039c61035a565b604051601f8301601f19908116603f011681019082821181831017156103c4576103c461035a565b816040528381528660208588010111156103dd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561040f57600080fd5b813567ffffffffffffffff81111561042657600080fd5b61043284828501610370565b949350505050565b60005b8381101561045557818101518382015260200161043d565b50506000910152565b602081526000825180602084015261047d81604085016020870161043a565b601f01601f19169190910160400192915050565b600080604083850312156104a457600080fd5b823567ffffffffffffffff808211156104bc57600080fd5b6104c886838701610370565b935060208501359150808211156104de57600080fd5b506104eb85828601610370565b9150509250929050565b600181811c9082168061050957607f821691505b60208210810361052957634e487b7160e01b600052602260045260246000fd5b50919050565b6000825161054181846020870161043a565b9190910192915050565b601f8211156101fa57600081815260208120601f850160051c810160208610156105725750805b601f850160051c820191505b818110156105915782815560010161057e565b505050505050565b815167ffffffffffffffff8111156105b3576105b361035a565b6105c7816105c184546104f5565b8461054b565b602080601f8311600181146105fc57600084156105e45750858301515b600019600386901b1c1916600185901b178555610591565b600085815260208120601f198616915b8281101561062b5788860151825594840194600190910190840161060c565b50858210156106495787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122049df905359c4d7ba41281972b76070685df4acb7c7710804cbef761851f556dd64736f6c63430008130033";

type IDrissConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IDrissConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IDriss__factory extends ContractFactory {
  constructor(...args: IDrissConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IDriss> {
    return super.deploy(overrides || {}) as Promise<IDriss>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IDriss {
    return super.attach(address) as IDriss;
  }
  override connect(signer: Signer): IDriss__factory {
    return super.connect(signer) as IDriss__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IDrissInterface {
    return new utils.Interface(_abi) as IDrissInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IDriss {
    return new Contract(address, _abi, signerOrProvider) as IDriss;
  }
}
