/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IDrissMappings,
  IDrissMappingsInterface,
} from "../IDrissMappings";

const _abi = [
  {
    inputs: [],
    name: "IDrissMappings__BindingAlreadyCreated",
    type: "error",
  },
  {
    inputs: [],
    name: "IDrissMappings__BindingDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "IDrissMappings__CannotChangeExistingBinding",
    type: "error",
  },
  {
    inputs: [],
    name: "IDrissMappings__FailedToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "IDrissMappings__NotEnough_MATIC",
    type: "error",
  },
  {
    inputs: [],
    name: "IDrissMappings__OnlyContractOwnerCanAddAdmins",
    type: "error",
  },
  {
    inputs: [],
    name: "IDrissMappings__OnlyContractOwnerCanChangeOwnership",
    type: "error",
  },
  {
    inputs: [],
    name: "IDrissMappings__OnlyContractOwnerCanDeleteAdmins",
    type: "error",
  },
  {
    inputs: [],
    name: "IDrissMappings__OnlyContractOwnerCanSetPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "IDrissMappings__OnlyIDrissOwnerCanChangeOwnership",
    type: "error",
  },
  {
    inputs: [],
    name: "IDrissMappings__OnlyIDrissOwnerCanDeleteBinding",
    type: "error",
  },
  {
    inputs: [],
    name: "IDrissMappings__OnlyTrustedAdminCanAddIDriss",
    type: "error",
  },
  {
    inputs: [],
    name: "IDrissMappings__OnlyTrustedAdminCanWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "IDrissMappings__Ownable_NewContractOwnerIsTheZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Decrement",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "hash",
        type: "string",
      },
    ],
    name: "IDrissAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "hash",
        type: "string",
      },
    ],
    name: "IDrissDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousIDrissOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newIDrissOwner",
        type: "address",
      },
    ],
    name: "IDrissOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Increment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NewPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "IDrissOwners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hashPub",
        type: "string",
      },
      {
        internalType: "string",
        name: "hashID",
        type: "string",
      },
      {
        internalType: "string",
        name: "address_",
        type: "string",
      },
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
    ],
    name: "addIDriss",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hashPub",
        type: "string",
      },
      {
        internalType: "string",
        name: "hashID",
        type: "string",
      },
      {
        internalType: "string",
        name: "address_",
        type: "string",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
    ],
    name: "addIDrissToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "countAdding",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "countDeleting",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creationTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
    ],
    name: "deleteAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hashPub",
        type: "string",
      },
    ],
    name: "deleteIDriss",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hashPub",
        type: "string",
      },
    ],
    name: "getIDriss",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "payDates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferContractOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hashPub",
        type: "string",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferIDrissOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405242600355600480546001600160a01b0319163317905534801561002657600080fd5b50611667806100366000396000f3fe6080604052600436106101095760003560e01c80638398140011610095578063b868714711610064578063b8687147146102b9578063c3234c35146102cc578063ce606ee014610304578063d8270dce14610324578063fea072d01461033a57600080fd5b8063839814001461025d57806391b7f5ed14610270578063a035b1fe14610290578063a843c51f146102a657600080fd5b806349df728c116100dc57806349df728c146101915780635335104b146101b15780635c9db38f146101d1578063679f0015146101e4578063704802751461023d57600080fd5b806327e1f7df1461010e578063392ad67f146101305780633ccfd60b14610159578063453d02ba1461017b575b600080fd5b34801561011a57600080fd5b5061012e6101293660046110bb565b61034d565b005b34801561013c57600080fd5b5061014660015481565b6040519081526020015b60405180910390f35b34801561016557600080fd5b5061016e6103c1565b604051610150919061112d565b34801561018757600080fd5b5061014660005481565b34801561019d57600080fd5b5061012e6101ac3660046110bb565b610470565b3480156101bd57600080fd5b5061016e6101cc3660046111e3565b61058d565b61012e6101df366004611220565b6106c3565b3480156101f057600080fd5b506102256101ff3660046111e3565b80516020818301810180516007825292820191909301209152546001600160a01b031681565b6040516001600160a01b039091168152602001610150565b34801561024957600080fd5b5061012e6102583660046110bb565b610780565b61012e61026b36600461126e565b6107f7565b34801561027c57600080fd5b5061012e61028b366004611307565b6109c2565b34801561029c57600080fd5b5061014660025481565b61012e6102b43660046110bb565b610a28565b61012e6102c7366004611320565b610a86565b3480156102d857600080fd5b506101466102e73660046111e3565b805160208183018101805160088252928201919093012091525481565b34801561031057600080fd5b50600454610225906001600160a01b031681565b34801561033057600080fd5b5061014660035481565b61012e6103483660046111e3565b610da5565b6004546001600160a01b0316331461037857604051632ecb6f4360e11b815260040160405180910390fd5b6001600160a01b038116600081815260096020526040808220805460ff19169055517f989ddfce057dad219e0ae16f691b121bb0e348f0d8ae0ad400b4d5ac8d616c8b9190a250565b3360009081526009602052604090205460609060ff1615156001146103f95760405163a52c009d60e01b815260040160405180910390fd5b60405160009081903390619c4090479084818181858888f193505050503d8060008114610442576040519150601f19603f3d011682016040523d82523d6000602084013e610447565b606091505b50915091508161046a57604051632784f7a360e11b815260040160405180910390fd5b92915050565b3360009081526009602052604090205460ff1615156001146104a55760405163a52c009d60e01b815260040160405180910390fd5b6040516370a0823160e01b815230600482015281906001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381865afa1580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051991906113d2565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610564573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058891906113eb565b505050565b604080516020810182526000905251606090600080516020611612833981519152906006906105bd90859061140d565b9081526040519081900360200181206105d5916114d6565b6040518091039020036105fb576040516351679fab60e11b815260040160405180910390fd5b600560068360405161060d919061140d565b908152604051908190036020018120610625916114d6565b9081526020016040518091039020805461063e90611429565b80601f016020809104026020016040519081016040528092919081815260200182805461066a90611429565b80156106b75780601f1061068c576101008083540402835291602001916106b7565b820191906000526020600020905b81548152906001019060200180831161069a57829003601f168201915b50505050509050919050565b336001600160a01b03166007836040516106dd919061140d565b908152604051908190036020019020546001600160a01b03161461071457604051636c64f87760e11b815260040160405180910390fd5b80600783604051610725919061140d565b90815260405190819003602001812080546001600160a01b039384166001600160a01b03199091161790559082169033907f0e643e8fe2f6e1dfd016e8b1761ee1627c3428bb650f55f2ba0488be210a385a90600090a35050565b6004546001600160a01b031633146107ab5760405163a0cc084760e01b815260040160405180910390fd5b6001600160a01b038116600081815260096020526040808220805460ff19166001179055517f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e3399190a250565b3360009081526009602052604090205460ff16151560011461082c5760405163016739db60e61b815260040160405180910390fd5b6040805160208101825260009052516000805160206116128339815191529060069061085990879061140d565b908152604051908190036020018120610871916114d6565b604051809103902014610897576040516311c421c760e21b815260040160405180910390fd5b6002543410156108ba57604051630c951c6160e11b815260040160405180910390fd5b816005846040516108cb919061140d565b908152602001604051809103902090816108e59190611530565b50826006856040516108f7919061140d565b908152602001604051809103902090816109119190611530565b5080600785604051610923919061140d565b908152602001604051809103902060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555042600885604051610966919061140d565b9081526040519081900360200190205561097e610f65565b8360405161098c919061140d565b604051908190038120907ffed8b27bfcef56857e564d6522e88730dce7de6d50f5f2e8f8a10df8b4fa997390600090a250505050565b6004546001600160a01b031633146109ed57604051634bb25be160e11b815260040160405180910390fd5b60028190556040518181527f270b316b51ab2cf3a3bb8ca4d22e76a327d05e762fcaa8bd6afaf8cfde9270b79060200160405180910390a150565b6004546001600160a01b03163314610a535760405163643449e560e01b815260040160405180910390fd5b6001600160a01b038116610a7a57604051630b14344960e21b815260040160405180910390fd5b610a8381610fb5565b50565b3360009081526009602052604090205460ff161515600114610abb5760405163016739db60e61b815260040160405180910390fd5b60408051602081018252600090525160008051602061161283398151915290600690610ae890899061140d565b908152604051908190036020018120610b00916114d6565b604051809103902014610b2657604051636a7cc1ad60e01b815260040160405180910390fd5b604051636eb1769f60e11b8152336004820152306024820152839083906001600160a01b0383169063dd62ed3e90604401602060405180830381865afa158015610b74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9891906113d2565b1015610be45760405162461bcd60e51b815260206004820152601660248201527524b739bab334b1b4b2b73a1020b63637bbb0b731b29760511b60448201526064015b60405180910390fd5b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5b91906113eb565b610c9a5760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9102330b4b632b21760811b6044820152606401610bdb565b84600587604051610cab919061140d565b90815260200160405180910390209081610cc59190611530565b5085600688604051610cd7919061140d565b90815260200160405180910390209081610cf19190611530565b5081600788604051610d03919061140d565b908152602001604051809103902060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555042600888604051610d46919061140d565b90815260405190819003602001902055610d5e610f65565b86604051610d6c919061140d565b604051908190038120907ffed8b27bfcef56857e564d6522e88730dce7de6d50f5f2e8f8a10df8b4fa997390600090a250505050505050565b336001600160a01b0316600782604051610dbf919061140d565b908152604051908190036020019020546001600160a01b031614610df65760405163ba1ecb3160e01b815260040160405180910390fd5b60408051602081018252600090525160008051602061161283398151915290600690610e2390849061140d565b908152604051908190036020018120610e3b916114d6565b604051809103902003610e61576040516351679fab60e11b815260040160405180910390fd5b6005600682604051610e73919061140d565b908152604051908190036020018120610e8b916114d6565b90815260200160405180910390206000610ea59190611051565b600681604051610eb5919061140d565b90815260200160405180910390206000610ecf9190611051565b600781604051610edf919061140d565b90815260405190819003602001812080546001600160a01b0319169055600890610f0a90839061140d565b908152602001604051809103902060009055610f24611007565b80604051610f32919061140d565b604051908190038120907f1838740f74b11929173af9e8cebc5592e1dab8e3f36341b579a4b0e3e97606af90600090a250565b6001600080828254610f7791906115f0565b90915550506000546040519081527f51af157c2eee40f68107a47a49c32fbbeb0a3c9e5cd37aa56e88e6be92368a81906020015b60405180910390a1565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600180600082825461101991906115f0565b90915550506001546040519081527f32814a5bdfd1b8c3d76c49c54e043d6e8aa93d197a09e16599b567135503f74890602001610fab565b50805461105d90611429565b6000825580601f1061106d575050565b601f016020900490600052602060002090810190610a8391905b8082111561109b5760008155600101611087565b5090565b80356001600160a01b03811681146110b657600080fd5b919050565b6000602082840312156110cd57600080fd5b6110d68261109f565b9392505050565b60005b838110156110f85781810151838201526020016110e0565b50506000910152565b600081518084526111198160208601602086016110dd565b601f01601f19169290920160200192915050565b6020815260006110d66020830184611101565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261116757600080fd5b813567ffffffffffffffff8082111561118257611182611140565b604051601f8301601f19908116603f011681019082821181831017156111aa576111aa611140565b816040528381528660208588010111156111c357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156111f557600080fd5b813567ffffffffffffffff81111561120c57600080fd5b61121884828501611156565b949350505050565b6000806040838503121561123357600080fd5b823567ffffffffffffffff81111561124a57600080fd5b61125685828601611156565b9250506112656020840161109f565b90509250929050565b6000806000806080858703121561128457600080fd5b843567ffffffffffffffff8082111561129c57600080fd5b6112a888838901611156565b955060208701359150808211156112be57600080fd5b6112ca88838901611156565b945060408701359150808211156112e057600080fd5b506112ed87828801611156565b9250506112fc6060860161109f565b905092959194509250565b60006020828403121561131957600080fd5b5035919050565b60008060008060008060c0878903121561133957600080fd5b863567ffffffffffffffff8082111561135157600080fd5b61135d8a838b01611156565b9750602089013591508082111561137357600080fd5b61137f8a838b01611156565b9650604089013591508082111561139557600080fd5b506113a289828a01611156565b9450506113b16060880161109f565b9250608087013591506113c660a0880161109f565b90509295509295509295565b6000602082840312156113e457600080fd5b5051919050565b6000602082840312156113fd57600080fd5b815180151581146110d657600080fd5b6000825161141f8184602087016110dd565b9190910192915050565b600181811c9082168061143d57607f821691505b60208210810361145d57634e487b7160e01b600052602260045260246000fd5b50919050565b6000815461147081611429565b60018281168015611488576001811461149d576114cc565b60ff19841687528215158302870194506114cc565b8560005260208060002060005b858110156114c35781548a8201529084019082016114aa565b50505082870194505b5050505092915050565b60006110d68284611463565b601f82111561058857600081815260208120601f850160051c810160208610156115095750805b601f850160051c820191505b8181101561152857828155600101611515565b505050505050565b815167ffffffffffffffff81111561154a5761154a611140565b61155e816115588454611429565b846114e2565b602080601f831160018114611593576000841561157b5750858301515b600019600386901b1c1916600185901b178555611528565b600085815260208120601f198616915b828110156115c2578886015182559484019460019091019084016115a3565b50858210156115e05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561046a57634e487b7160e01b600052601160045260246000fdfec5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470a26469706673582212202a76517e1c0e233f0719616fdf6a81cf8e5ce4ebfe063860e5d9c11e694b9f1364736f6c63430008130033";

export class IDrissMappings__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IDrissMappings> {
    return super.deploy(overrides || {}) as Promise<IDrissMappings>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): IDrissMappings {
    return super.attach(address) as IDrissMappings;
  }
  connect(signer: Signer): IDrissMappings__factory {
    return super.connect(signer) as IDrissMappings__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IDrissMappingsInterface {
    return new utils.Interface(_abi) as IDrissMappingsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDrissMappings {
    return new Contract(address, _abi, signerOrProvider) as IDrissMappings;
  }
}
