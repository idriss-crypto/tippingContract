/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SendToHashReentrancyMock,
  SendToHashReentrancyMockInterface,
} from "../SendToHashReentrancyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sendToHashAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reentrancyCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161052438038061052483398101604081905261002f91610058565b600080546001600160a01b0319166001600160a01b039390931692909217909155600155610092565b6000806040838503121561006b57600080fd5b82516001600160a01b038116811461008257600080fd5b6020939093015192949293505050565b610483806100a16000396000f3fe6080604052600436106100595760003560e01c806323b872dd146100655780636ebb63d91461009a578063a9059cbb146100be578063b69ef8a8146100de578063b88d4fde146100f1578063f242432a1461011357600080fd5b3661006057005b600080fd5b34801561007157600080fd5b50610085610080366004610230565b610133565b60405190151581526020015b60405180910390f35b3480156100a657600080fd5b506100b060025481565b604051908152602001610091565b3480156100ca57600080fd5b506100856100d936600461026c565b610149565b3480156100ea57600080fd5b50476100b0565b3480156100fd57600080fd5b5061011161010c3660046102df565b61015e565b005b34801561011f57600080fd5b5061011161012e36600461034e565b61016f565b600061013f6001610181565b5060019392505050565b60006101556001610181565b50600192915050565b6101686002610181565b5050505050565b6101796003610181565b505050505050565b60028054906000610191836103c6565b91905055506005600254101561021157600054600180546040516245ac2560e01b81526001600160a01b03909316926245ac25926729a2241af62c0000926101e4929091600591889130916004016103ed565b6000604051808303818588803b1580156101fd57600080fd5b505af1158015610179573d6000803e3d6000fd5b50565b80356001600160a01b038116811461022b57600080fd5b919050565b60008060006060848603121561024557600080fd5b61024e84610214565b925061025c60208501610214565b9150604084013590509250925092565b6000806040838503121561027f57600080fd5b61028883610214565b946020939093013593505050565b60008083601f8401126102a857600080fd5b50813567ffffffffffffffff8111156102c057600080fd5b6020830191508360208285010111156102d857600080fd5b9250929050565b6000806000806000608086880312156102f757600080fd5b61030086610214565b945061030e60208701610214565b935060408601359250606086013567ffffffffffffffff81111561033157600080fd5b61033d88828901610296565b969995985093965092949392505050565b60008060008060008060a0878903121561036757600080fd5b61037087610214565b955061037e60208801610214565b94506040870135935060608701359250608087013567ffffffffffffffff8111156103a857600080fd5b6103b489828a01610296565b979a9699509497509295939492505050565b6000600182016103e657634e487b7160e01b600052601160045260246000fd5b5060010190565b85815284602082015260006005851061041657634e487b7160e01b600052602160045260246000fd5b5060408101939093526001600160a01b03919091166060830152608082015260c060a0820181905260009082015260e0019291505056fea2646970667358221220a7df1b7c71c01e7a5fe38dd04c826798c036c111966607eb07fed5b8d8460ba864736f6c63430008130033";

export class SendToHashReentrancyMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _sendToHashAddress: string,
    _hash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SendToHashReentrancyMock> {
    return super.deploy(
      _sendToHashAddress,
      _hash,
      overrides || {}
    ) as Promise<SendToHashReentrancyMock>;
  }
  getDeployTransaction(
    _sendToHashAddress: string,
    _hash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _sendToHashAddress,
      _hash,
      overrides || {}
    );
  }
  attach(address: string): SendToHashReentrancyMock {
    return super.attach(address) as SendToHashReentrancyMock;
  }
  connect(signer: Signer): SendToHashReentrancyMock__factory {
    return super.connect(signer) as SendToHashReentrancyMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SendToHashReentrancyMockInterface {
    return new utils.Interface(_abi) as SendToHashReentrancyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SendToHashReentrancyMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SendToHashReentrancyMock;
  }
}
